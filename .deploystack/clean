# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# DON'T REMOVE FROM test script.
CYAN='\033[0;36m'
BCYAN='\033[1;36m'
NC='\033[0m' # No Color
DIVIDER=$(printf %"$(tput cols)"s | tr " " "*")
DIVIDER+="\n"

function get_project_id() {
    local __resultvar=$1
    VALUE=$(gcloud config get-value project | xargs)
    eval $__resultvar="'$VALUE'"
}

function get_project_number() {
    local __resultvar=$1
    local PRO=$2
    VALUE=$(gcloud projects list --filter="project_id=$PRO" --format="value(PROJECT_NUMBER)" | xargs)
    eval $__resultvar="'$VALUE'"
}

# DISPLAY HELPERS
function section_open() {
    section_description=$1
    printf "$DIVIDER"
    printf "${CYAN}$section_description${NC} \n"
    printf "$DIVIDER"
}

function section_close() {
    printf "$DIVIDER"
    printf "${CYAN}$section_description ${BCYAN}- done${NC}\n"
    printf "\n\n"
}

function evalTest() {
    local command=$1
    local expected=$2

    local ERR=""
    got=$(eval $command 2>errFile)
    ERR=$(<errFile)

    if [ ${#ERR} -gt 0 ]; then
        if [ "$expected" = "EXPECTERROR" ]; then
            printf "Expected Error thrown \n"
            return
        fi

        printf "Halting - error: '$ERR'  \n"
        exit 1
    fi

    if [ "$got" != "$expected" ]; then
        printf "Halting: '$got'  \n"
        exit 1
    fi

    printf "$expected is ok\n"
}
# END DON'T REMOVE FROM test script.

get_project_id PROJECT
get_project_number PROJECT_NUMBER $PROJECT
PREFIX=deploystack
PROJECT_ID=$PROJECT
REGION=europe-west1

section_open "Deleting Cloud Run"
    gcloud run services delete ${PREFIX}-cr-wordpress --region ${REGION} -q
section_close

section_open "Delete Cloud SQL users"
    gcloud sql users delete admin --instance ${PREFIX}-mysql -q
section_close

section_open "Delete Cloud SQL instances"
    gcloud sql instances delete ${PREFIX}-mysql -q
section_close

section_open "Delete VPC Access connector"
    gcloud compute networks vpc-access connectors delete --region ${REGION} ${PREFIX}-wp-connector -q
section_close

section_open "Delete global address"
    gcloud compute addresses delete cloud-sql --global -q
section_close

section_open "Delete Private Service Access"
    gcloud services vpc-peerings delete --service servicenetworking.googleapis.com --network ${PREFIX}-sql-vpc -q
section_close

section_open "Delete subnets"
    gcloud compute networks subnets delete subnet --region ${REGION} -q
section_close

section_open "Delete VPC"
    gcloud compute networks delete ${PREFIX}-sql-vpc -q
section_close

printf "$DIVIDER"
printf "CONGRATS!!!!!!! \n"
printf "Everything is all cleaned up.\n"
printf "$DIVIDER"
